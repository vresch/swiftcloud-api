# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Song {
  id: Int!
  song: String!
  artist: String!
  writer: String!
  album: String!
  year: Int!
  playsJune: Int!
  playsJuly: Int!
  playsAugust: Int!
}

type SongEdge {
  cursor: String!
  node: Song!
}

type PaginatedSong {
  edges: [SongEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type Query {
  songList(pagination: PaginationArgs, query: SongListArgs, orderBy: OrderByArgs): PaginatedSong!
}

input PaginationArgs {
  after: String
  before: String
  first: Int
  last: Int
}

input SongListArgs {
  id: Int
  song: String
  artist: String
  writer: String
  album: String
  year: Int
  playsJune: Int
  playsJuly: Int
  playsAugust: Int
}

input OrderByArgs {
  field: String!
  direction: OrderDirection! = asc
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  asc
  desc
}